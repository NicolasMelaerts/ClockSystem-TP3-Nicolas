name: Java CI with Gradle and CodeQL Analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write  # Nécessaire pour la création de rapports de sécurité

    # Services pour exécuter Xvfb en mode headless
    services:
      xvfb:
        image: selenium/standalone-chrome:latest
        options: -e VNC_SERVER=true -e VNC_PORT=5900

    env:
      DISPLAY: ":99.0"  # Set display for Xvfb to avoid GUI issues in headless environment

    steps:
    - uses: actions/checkout@v4

    # Configuration du JDK 21
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    # Configuration de Gradle
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4
      with:
        gradle-version: '8.10'

    # Lancer Xvfb avant de démarrer les tests
    - name: Start Xvfb
      run: Xvfb $DISPLAY -ac -screen 0 1600x1200x24 > /dev/null 2>&1 &

    # Construction du projet avec Gradle
    - name: Build with Gradle
      run: gradle build

    # Initialisation de CodeQL
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: java
        build-mode: manual  # Nécessaire car CodeQL ne peut pas auto-builder tous les projets
        # Ajouter la commande de construction ici pour que CodeQL puisse analyser
        build-command: gradle build

    # Exécution de l'analyse CodeQL
    - name: Run CodeQL Analysis
      uses: github/codeql-action/analyze@v3

    # Publier le rapport CodeQL
    - name: Upload CodeQL Report
      uses: actions/upload-artifact@v4
      with:
        name: codeql-report
        path: codeql-results.sarif
